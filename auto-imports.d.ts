/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// Generated by unplugin-auto-import
export {}
declare global {
  const QuerySnapshot: typeof import('firebase/firestore')['QuerySnapshot']
  const Timestamp: typeof import('firebase/firestore')['Timestamp']
  const Unsubscribe: typeof import('firebase/firestore')['Unsubscribe']
  const WithFieldValue: typeof import('firebase/firestore')['WithFieldValue']
  const collection: typeof import('firebase/firestore')['collection']
  const describe: typeof import('vitest')['describe']
  const doc: typeof import('firebase/firestore')['doc']
  const expect: typeof import('vitest')['expect']
  const fk: typeof import('@faker-js/faker')['faker']
  const getDoc: typeof import('firebase/firestore')['getDoc']
  const getDocs: typeof import('firebase/firestore')['getDocs']
  const getFirestore: typeof import('firebase/firestore')['getFirestore']
  const initializeFirestore: typeof import('firebase/firestore')['initializeFirestore ']
  const onSnapshot: typeof import('firebase/firestore')['onSnapshot']
  const query: typeof import('firebase/firestore')['query']
  const setDoc: typeof import('firebase/firestore')['setDoc']
  const test: typeof import('vitest')['test']
  const updateDoc: typeof import('firebase/firestore')['updateDoc']
  const withConverter: typeof import('firebase/firestore')['withConverter']
}
// for vue template auto import
import { UnwrapRef } from 'vue'
declare module 'vue' {
  interface ComponentCustomProperties {
    readonly QuerySnapshot: UnwrapRef<typeof import('firebase/firestore')['QuerySnapshot']>
    readonly Timestamp: UnwrapRef<typeof import('firebase/firestore')['Timestamp']>
    readonly Unsubscribe: UnwrapRef<typeof import('firebase/firestore')['Unsubscribe']>
    readonly WithFieldValue: UnwrapRef<typeof import('firebase/firestore')['WithFieldValue']>
    readonly collection: UnwrapRef<typeof import('firebase/firestore')['collection']>
    readonly describe: UnwrapRef<typeof import('vitest')['describe']>
    readonly doc: UnwrapRef<typeof import('firebase/firestore')['doc']>
    readonly expect: UnwrapRef<typeof import('vitest')['expect']>
    readonly fk: UnwrapRef<typeof import('@faker-js/faker')['faker']>
    readonly getDoc: UnwrapRef<typeof import('firebase/firestore')['getDoc']>
    readonly getDocs: UnwrapRef<typeof import('firebase/firestore')['getDocs']>
    readonly getFirestore: UnwrapRef<typeof import('firebase/firestore')['getFirestore']>
    readonly onSnapshot: UnwrapRef<typeof import('firebase/firestore')['onSnapshot']>
    readonly query: UnwrapRef<typeof import('firebase/firestore')['query']>
    readonly setDoc: UnwrapRef<typeof import('firebase/firestore')['setDoc']>
    readonly test: UnwrapRef<typeof import('vitest')['test']>
    readonly updateDoc: UnwrapRef<typeof import('firebase/firestore')['updateDoc']>
    readonly withConverter: UnwrapRef<typeof import('firebase/firestore')['withConverter']>
  }
}
declare module '@vue/runtime-core' {
  interface ComponentCustomProperties {
    readonly QuerySnapshot: UnwrapRef<typeof import('firebase/firestore')['QuerySnapshot']>
    readonly Timestamp: UnwrapRef<typeof import('firebase/firestore')['Timestamp']>
    readonly Unsubscribe: UnwrapRef<typeof import('firebase/firestore')['Unsubscribe']>
    readonly WithFieldValue: UnwrapRef<typeof import('firebase/firestore')['WithFieldValue']>
    readonly collection: UnwrapRef<typeof import('firebase/firestore')['collection']>
    readonly describe: UnwrapRef<typeof import('vitest')['describe']>
    readonly doc: UnwrapRef<typeof import('firebase/firestore')['doc']>
    readonly expect: UnwrapRef<typeof import('vitest')['expect']>
    readonly fk: UnwrapRef<typeof import('@faker-js/faker')['faker']>
    readonly getDoc: UnwrapRef<typeof import('firebase/firestore')['getDoc']>
    readonly getDocs: UnwrapRef<typeof import('firebase/firestore')['getDocs']>
    readonly getFirestore: UnwrapRef<typeof import('firebase/firestore')['getFirestore']>
    readonly onSnapshot: UnwrapRef<typeof import('firebase/firestore')['onSnapshot']>
    readonly query: UnwrapRef<typeof import('firebase/firestore')['query']>
    readonly setDoc: UnwrapRef<typeof import('firebase/firestore')['setDoc']>
    readonly test: UnwrapRef<typeof import('vitest')['test']>
    readonly updateDoc: UnwrapRef<typeof import('firebase/firestore')['updateDoc']>
    readonly withConverter: UnwrapRef<typeof import('firebase/firestore')['withConverter']>
  }
}
